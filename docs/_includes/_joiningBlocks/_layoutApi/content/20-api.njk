
{% if package %}
  {% set types = api.packages[package] %}
{% endif %}

{%- macro anchor(text, level=3, prefix='', class='', slot='') -%}
  {%- set id = (prefix + '-' + text) if prefix else text -%}
  <h{{ level }}
      id="{{- id | lower | trim -}}"
      class="{{- class -}}"
      slot="{{- slot -}}">
    <a class="anchor" href="#{{- id | lower | trim -}}">
      <svg class="octicon octicon-link" viewBox="0 0 16 16" aria-hidden="true" width="16" height="16">
        <path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path>
      </svg>
    </a>
    {{- text -}}
  </h{{ level }}>
{%- endmacro -%}

{% macro getTSDocMarkdown(type) %}
{% markdown %}{{ type | getSummary }}{% endmarkdown %}
{% markdown %}{{ type.comment.shortText }}{% endmarkdown %}
{% markdown %}{{ type.comment.text }}{% endmarkdown %}
{% endmacro %}

{%- macro codeBlock(type, lang='ts') -%}
{% markdown %}```{{ lang }}
{{ type | safe }}
```{% endmarkdown %}
{%- endmacro -%}

{%- macro literal(type) -%}
  {{ ('null' if type.value == null else ('"' + type.value + '"')) | safe }}
{%- endmacro -%}

{%- macro union(type, flags) -%}
  {%- for item in type.types -%}
    {%- if flags.isOptional and item.type == 'intrinsic' and item.name == 'undefined' -%}
    {%- else -%}
      {{ typeString(item) }}{{ '|' if not loop.last }}
    {%- endif -%}
  {%- endfor -%}
{%- endmacro -%}

{%- macro array(type) -%}
  {{ type.elementType.name }}[]
{%- endmacro -%}

{%- macro reflection(type) -%}
  {%- if type.declaration.kindString == 'Type literal' -%}
    {{ '' }}
  {% elif type.declaration.kindString == 'Call signature' %}
    {{ callSignature(type.declaration.signatures[0])  }}
  {%- endif -%}
{%- endmacro -%}

{%- macro typeString(type, flags) -%}
  {%- if type.type == 'reflection' -%} {{ reflection(type) }}
  {%- elif type.type == 'literal' -%} {{ literal(type) }}
  {%- elif type.type == 'typeOperator' -%} {{ type.operator }} {{ typeString(type.target) }}
  {%- elif type.type == 'array' -%} {{ array(type, flags) }}
  {%- elif type.type == 'union' -%} {{ union(type, flags) }}
  {%- else -%}
    {{ type.name }}
    {%- if type.typeArguments -%}
      <
      {%- for arg in type.typeArguments -%}
        {%- if arg.type == 'array' -%}
          {{ array(arg) }}
        {%- elif arg.type == 'union' -%}
          {{ union(arg) }}
        {%- else -%}
          {{ arg.name }}
        {%- endif -%}
        {{- ', ' if not loop.last -}}
      {%- endfor -%}
      >
    {%- endif -%}
  {%- endif -%}
{%- endmacro -%}

{%- macro callSignature(sig) -%}
  {{ sig.name if sig.name != '__type' }}
  {%- if sig.typeParameter -%}<
    {%- for param in sig.typeParameter -%}
    {{ param.name }}{{- ', ' if not loop.last -}}
    {%- endfor -%}
  >{%- endif -%}(
  {%- for param in sig.parameters -%}
    {{ param.name }}: {{ typeString(param.type, param.flags) }}{{- ', ' if not loop.last -}}
  {%- endfor -%}
  ){{ (' =>' if sig.name == '__type' else ':') | safe }} {{ typeString(sig.type, sig.flags) }}
{%- endmacro -%}


{%- for type in types -%}
  <article class="type" data-name="{{ type.name }}">
    {{ anchor(type.name, level=3) }}
    {{ getTSDocMarkdown(type) }}

    {# Properties #}
    {% if type | getProperties | length %}
      {{ anchor('Properties', level=3, prefix=type.name) }}
      {%- for property in type | getProperties -%}
        <type-doc kind="property" data-name="{{ property.name }}">
          <span slot="name">
            {{ anchor(property.name, level=4, prefix=type.name) }}
            {% if property.flags.isOptional %}<span>(optional)</span>{% endif %}
          </span>
          {% if property.type %}
            <span slot="type">{{ codeBlock(typeString(property.type, property.flags)) }}</span>
          {% endif %}

          {{ getTSDocMarkdown(property) }}
        </type-doc>
      {%- endfor -%}
    {% endif %}
    {# End Properties #}

    {# Methods #}
    {% if type | getMethods | length %}
      {{ anchor('Methods', level=3, prefix=type.name) }}
      {%- for method in type | getMethods -%}
        <type-doc kind="method"
            data-method="{{ method.name }}"
            data-name="{{ method.name }}">
          {{ anchor(method.name, level=4, slot='name', prefix=type.name) }}

          {% for sig in method.signatures %}

            {{ getTSDocMarkdown(sig) }}

            {# Type Parameters #}
            {%- if sig.typeParameter -%}
              {{ anchor('Type Parameters', level=4, prefix=(type.name + '-' + method.name)) }}
              {%- for param in sig.typeParameter -%}
                <type-doc kind="type-parameter" data-parameter="{{ param.name }}">
                  {{ anchor(param.name, level=5, slot='name', prefix=(type.name + '-' + method.name + '-type-parameter')) }}
                  {% if param.type %}
                    <span slot="type">
                      {%- markdown -%}{{ codeBlock(typeString(param.type, param.flags)) }}{%- endmarkdown -%}
                    </span>
                  {% endif %}
                  {{ getTSDocMarkdown(param) }}
                </type-doc>
              {%- endfor -%}
            {%- endif -%}
            {# End Type Parameters #}

            {# Parameters #}
            {% if sig.parameters %}
              {{ anchor('Parameters', level=4, prefix=method.name) }}
              {%- for param in sig.parameters -%}
                <type-doc kind="parameter" data-parameter="{{ param.name }}">
                  {{ anchor(param.name, level=5, slot='name', prefix=('parameter-'+method.name)) }}
                  <span slot="type">
                    {%- markdown -%}{{ codeBlock(typeString(param.type, param.flags)) }}{%- endmarkdown -%}
                  </span>
                  {{ getTSDocMarkdown(param) }}
                </type-doc>
              {%- endfor -%}
            {% endif %}
            {# End Parameters #}

            {# Return #}
            <type-doc kind="return">
              {{ anchor('Returns', level=4, slot='name', prefix=(type.name + '-' + method.name)) }}
              <span slot="type">
                {% markdown %}{{ codeBlock(typeString(sig.type)) }}{% endmarkdown %}
              </span>
              {{ getTSDocMarkdown(param) }}
            </type-doc>
            {# End Return #}
          {% endfor %}

        </type-doc>
      {%- endfor -%}
    {% endif %}
    {# End Methods #}

  </article>
{%- endfor -%}
